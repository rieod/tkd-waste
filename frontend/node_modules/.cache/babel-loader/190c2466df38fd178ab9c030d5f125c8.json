{"ast":null,"code":"import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport dayjs from 'dayjs';\nimport { useContext } from 'react';\nimport AuthContext from '../context/AuthContext';\nconst baseURL = 'http://127.0.0.1:8000/api/';\nconst useAxios = () => {\n  const [authTokens, setUser, setAuthTokens] = useContext(AuthContext);\n  const axiosInstance = axios.create({\n    baseURL,\n    headers: {\n      Authorization: `Bearer ${authTokens === null || authTokens === void 0 ? void 0 : authTokens.access}`\n    }\n  }).access;\n  axiosInstance.interceptors.request.use(async req => {\n    const user = jwt_decode(authTokens.access);\n    const isExpired = dayjs.unix(user.exp).diff(dayjs()) < 1;\n    if (isExpired) return req;\n    const response = await axios.post(`${baseURL}/token/refresh/`, {\n      refresh: authTokens.refresh\n    });\n    localStorage.setItem('authToken', JSON.stringify(response.data));\n    setAuthTokens(response.data);\n    setUser(jwt_decode(response.data.access));\n    req.headers.Authorization = `Bearer ${response.data.access}`;\n    return req;\n  });\n  return axiosInstance;\n};\nexport default useAxios;","map":{"version":3,"names":["axios","jwt_decode","dayjs","useContext","AuthContext","baseURL","useAxios","authTokens","setUser","setAuthTokens","axiosInstance","create","headers","Authorization","access","interceptors","request","use","req","user","isExpired","unix","exp","diff","response","post","refresh","localStorage","setItem","JSON","stringify","data"],"sources":["C:/Users/ASUS/Downloads/vrdesktop/tkd-waste/frontend/src/utils/useAxios.js"],"sourcesContent":["import axios from 'axios'\r\nimport jwt_decode from 'jwt-decode'\r\nimport dayjs from 'dayjs'\r\nimport { useContext } from 'react'\r\nimport AuthContext from'../context/AuthContext'\r\n\r\nconst baseURL = 'http://127.0.0.1:8000/api/';\r\n\r\nconst useAxios = () => {\r\n    const [authTokens, setUser, setAuthTokens] = useContext(AuthContext)\r\n\r\n    const axiosInstance = axios.create({\r\n        baseURL,\r\n        headers: {Authorization: `Bearer ${authTokens?.access}`}\r\n    }).access\r\n\r\n    axiosInstance.interceptors.request.use(async req => {\r\n        const user = jwt_decode(authTokens.access)\r\n        const isExpired = dayjs.unix(user.exp). diff(dayjs()) < 1\r\n\r\n        if (isExpired) return req\r\n\r\n        const response = await axios.post(`${baseURL}/token/refresh/`, {\r\n            refresh: authTokens.refresh\r\n        })\r\n        localStorage.setItem('authToken', JSON.stringify(response.data))\r\n\r\n        setAuthTokens(response.data)\r\n        setUser(jwt_decode(response.data.access))\r\n\r\n        req.headers.Authorization = `Bearer ${response.data.access}`\r\n        \r\n        return req\r\n    })\r\n\r\n    return axiosInstance\r\n}\r\n\r\nexport default useAxios"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,WAAW,MAAK,wBAAwB;AAE/C,MAAMC,OAAO,GAAG,4BAA4B;AAE5C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,MAAM,CAACC,UAAU,EAAEC,OAAO,EAAEC,aAAa,CAAC,GAAGN,UAAU,CAACC,WAAW,CAAC;EAEpE,MAAMM,aAAa,GAAGV,KAAK,CAACW,MAAM,CAAC;IAC/BN,OAAO;IACPO,OAAO,EAAE;MAACC,aAAa,EAAE,UAAUN,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEO,MAAM;IAAE;EAC3D,CAAC,CAAC,CAACA,MAAM;EAETJ,aAAa,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,MAAMC,GAAG,IAAI;IAChD,MAAMC,IAAI,GAAGlB,UAAU,CAACM,UAAU,CAACO,MAAM,CAAC;IAC1C,MAAMM,SAAS,GAAGlB,KAAK,CAACmB,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,CAAEC,IAAI,CAACrB,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;IAEzD,IAAIkB,SAAS,EAAE,OAAOF,GAAG;IAEzB,MAAMM,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,IAAI,CAAC,GAAGpB,OAAO,iBAAiB,EAAE;MAC3DqB,OAAO,EAAEnB,UAAU,CAACmB;IACxB,CAAC,CAAC;IACFC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAEhEtB,aAAa,CAACe,QAAQ,CAACO,IAAI,CAAC;IAC5BvB,OAAO,CAACP,UAAU,CAACuB,QAAQ,CAACO,IAAI,CAACjB,MAAM,CAAC,CAAC;IAEzCI,GAAG,CAACN,OAAO,CAACC,aAAa,GAAG,UAAUW,QAAQ,CAACO,IAAI,CAACjB,MAAM,EAAE;IAE5D,OAAOI,GAAG;EACd,CAAC,CAAC;EAEF,OAAOR,aAAa;AACxB,CAAC;AAED,eAAeJ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}