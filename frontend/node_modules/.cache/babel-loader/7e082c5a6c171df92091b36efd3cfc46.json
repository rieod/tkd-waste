{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\vrdesktop\\\\tkd-waste\\\\frontend\\\\src\\\\context\\\\AuthContext.js\";\nimport React from \"react\";\nimport { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from 'jwt-decode';\nimport { useNavigate } from \"react-router-dom\";\nconst swal = require('sweetalert2');\nconst AuthContext = createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  const [authTokens, setAuthTokens] = useState(() => localStorage.getItem(\"authTokens\") ? JSON.parse(localStorage.getItem(\"authTokens\")) : null);\n  const [user, setUser] = useState(() => localStorage.getItem(\"authTokens\") ? jwt_decode(localStorage.getItem(\"authTokens\")) : null);\n  const [loading, setLoading] = useState(true);\n  const history = useNavigate();\n  const loginUser = async (email, password) => {\n    const response = await fetch(\"http://127.0.0.1:8000/api/token/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    console.log(data);\n    if (response.status === 200) {\n      console.log(\"Logged In\");\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      history.push(\"/\");\n      swal.fire({\n        title: \"Login Successful\",\n        icon: \"success\",\n        toast: true,\n        timer: 6000,\n        position: 'top-right',\n        timerProgressBar: true,\n        showConfirmButton: false\n      });\n    } else {\n      console.log(response.status);\n      console.log(\"there was a server issue\");\n      swal.fire({\n        title: \"Username or passowrd does not exists\",\n        icon: \"error\",\n        toast: true,\n        timer: 6000,\n        position: 'top-right',\n        timerProgressBar: true,\n        showConfirmButton: false\n      });\n    }\n  };\n  const registerUser = async (email, username, password, password2) => {\n    const response = await fetch(\"http://127.0.0.1:8000/api/register/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        username,\n        password,\n        password2\n      })\n    });\n    if (response.status === 201) {\n      history.push(\"/login\");\n      swal.fire({\n        title: \"Registration Successful, Login Now\",\n        icon: \"success\",\n        toast: true,\n        timer: 6000,\n        position: 'top-right',\n        timerProgressBar: true,\n        showConfirmButton: false\n      });\n    } else {\n      console.log(response.status);\n      console.log(\"there was a server issue\");\n      swal.fire({\n        title: \"An Error Occured \" + response.status,\n        icon: \"error\",\n        toast: true,\n        timer: 6000,\n        position: 'top-right',\n        timerProgressBar: true,\n        showConfirmButton: false\n      });\n    }\n  };\n  const logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem(\"authTokens\");\n    history.push(\"/login\");\n    swal.fire({\n      title: \"YOu have been logged out...\",\n      icon: \"success\",\n      toast: true,\n      timer: 6000,\n      position: 'top-right',\n      timerProgressBar: true,\n      showConfirmButton: false\n    });\n  };\n  const contextData = {\n    user,\n    setUser,\n    authTokens,\n    setAuthTokens,\n    registerUser,\n    loginUser,\n    logoutUser\n  };\n  useEffect(() => {\n    if (authTokens) {\n      setUser(jwt_decode(authTokens.access));\n    }\n    setLoading(false);\n  }, [authTokens, loading]);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: contextData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, loading ? null : children);\n};\nexport default AuthContext;","map":{"version":3,"names":["React","createContext","useState","useEffect","jwt_decode","useNavigate","swal","require","AuthContext","AuthProvider","children","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","loading","setLoading","history","loginUser","email","password","response","fetch","method","headers","body","stringify","data","json","console","log","status","access","setItem","push","fire","title","icon","toast","timer","position","timerProgressBar","showConfirmButton","registerUser","username","password2","logoutUser","removeItem","contextData","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/ASUS/Downloads/vrdesktop/tkd-waste/frontend/src/context/AuthContext.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport {createContext, useState, useEffect} from \"react\";\r\nimport jwt_decode from 'jwt-decode'\r\nimport {useNavigate} from \"react-router-dom\";\r\nconst swal = require('sweetalert2')\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [authTokens, setAuthTokens] = useState(() =>\r\n        localStorage.getItem(\"authTokens\")\r\n            ? JSON.parse(localStorage.getItem(\"authTokens\"))\r\n            : null\r\n    );\r\n    \r\n\r\n    const [user, setUser] = useState(() => \r\n        localStorage.getItem(\"authTokens\")\r\n            ? jwt_decode(localStorage.getItem(\"authTokens\"))\r\n            : null\r\n    );\r\n\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const history = useNavigate();\r\n\r\n    const loginUser = async (email, password) => {\r\n        const response = await fetch(\"http://127.0.0.1:8000/api/token/\", {\r\n            method: \"POST\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                email, password\r\n            })\r\n        })\r\n        const data = await response.json()\r\n        console.log(data);\r\n\r\n        if(response.status === 200){\r\n            console.log(\"Logged In\");\r\n            setAuthTokens(data)\r\n            setUser(jwt_decode(data.access))\r\n            localStorage.setItem(\"authTokens\", JSON.stringify(data))\r\n            history.push(\"/\")\r\n            swal.fire({\r\n                title: \"Login Successful\",\r\n                icon: \"success\",\r\n                toast: true,\r\n                timer: 6000,\r\n                position: 'top-right',\r\n                timerProgressBar: true,\r\n                showConfirmButton: false,\r\n            })\r\n\r\n        } else {    \r\n            console.log(response.status);\r\n            console.log(\"there was a server issue\");\r\n            swal.fire({\r\n                title: \"Username or passowrd does not exists\",\r\n                icon: \"error\",\r\n                toast: true,\r\n                timer: 6000,\r\n                position: 'top-right',\r\n                timerProgressBar: true,\r\n                showConfirmButton: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    const registerUser = async (email, username, password, password2) => {\r\n        const response = await fetch(\"http://127.0.0.1:8000/api/register/\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                email, username, password, password2\r\n            })\r\n        })\r\n        if(response.status === 201){\r\n            history.push(\"/login\")\r\n            swal.fire({\r\n                title: \"Registration Successful, Login Now\",\r\n                icon: \"success\",\r\n                toast: true,\r\n                timer: 6000,\r\n                position: 'top-right',\r\n                timerProgressBar: true,\r\n                showConfirmButton: false,\r\n            })\r\n        } else {\r\n            console.log(response.status);\r\n            console.log(\"there was a server issue\");\r\n            swal.fire({\r\n                title: \"An Error Occured \" + response.status,\r\n                icon: \"error\",\r\n                toast: true,\r\n                timer: 6000,\r\n                position: 'top-right',\r\n                timerProgressBar: true,\r\n                showConfirmButton: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    const logoutUser = () => {\r\n        setAuthTokens(null)\r\n        setUser(null)\r\n        localStorage.removeItem(\"authTokens\")\r\n        history.push(\"/login\")\r\n        swal.fire({\r\n            title: \"YOu have been logged out...\",\r\n            icon: \"success\",\r\n            toast: true,\r\n            timer: 6000,\r\n            position: 'top-right',\r\n            timerProgressBar: true,\r\n            showConfirmButton: false,\r\n        })\r\n    }\r\n\r\n    const contextData = {\r\n        user, \r\n        setUser,\r\n        authTokens,\r\n        setAuthTokens,\r\n        registerUser,\r\n        loginUser,\r\n        logoutUser,\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (authTokens) {\r\n            setUser(jwt_decode(authTokens.access))\r\n        }\r\n        setLoading(false)\r\n    }, [authTokens, loading])\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextData}>\r\n            {loading ? null : children}\r\n        </AuthContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default AuthContext"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}